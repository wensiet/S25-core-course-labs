name: Golang App CI

on:
  push:
    branches:
      - master
    paths:
      - 'app_golang/**'
  pull_request:
    branches:
      - master
    paths:
      - 'app_golang/**'


jobs:

  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Dependencies
        run: |
          cd app_golang
          go mod download 

      - name: Lint
        run: |
          cd app_golang
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run
        continue-on-error: true

      - name: Test
        run: |
          cd app_golang
          go test -v ./...

  security:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        with:
          args: --skip-unresolved app_golang/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:app_golang"
          push: true
          tags: wensiet/devops-go-app:latest
          cache-from: wensiet/devops-go-app:latest
          cache-to: type=inline